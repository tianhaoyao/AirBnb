-- MySQL Script generated by MySQL Workbench
-- Mon Jul 22 13:26:37 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema my_bnb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema my_bnb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `my_bnb` ;
USE `my_bnb` ;

-- -----------------------------------------------------
-- Table `my_bnb`.`has_rented`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_bnb`.`has_rented` (
  `u_id` INT NOT NULL,
  `list_id` INT NOT NULL,
  `comment` VARCHAR(45) NULL,
  `rating` INT NULL,
  PRIMARY KEY (`u_id`, `list_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_bnb`.`renter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_bnb`.`renter` (
  `u_id` INT NOT NULL,
  `has_rented_u_id` INT NOT NULL,
  `has_rented_list_id` INT NOT NULL,
  `list_id` INT NOT NULL,
  PRIMARY KEY (`u_id`),
  INDEX `fk_renter_has_rented1_idx` (`has_rented_u_id` ASC, `has_rented_list_id` ASC) VISIBLE,
  CONSTRAINT `fk_renter_has_rented1`
    FOREIGN KEY (`has_rented_u_id` , `has_rented_list_id`)
    REFERENCES `my_bnb`.`has_rented` (`u_id` , `list_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_bnb`.`listed`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_bnb`.`listed` (
  `u_id` INT NOT NULL,
  `list_id` INT NOT NULL,
  PRIMARY KEY (`u_id`, `list_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_bnb`.`listings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_bnb`.`listings` (
  `list_id` INT NOT NULL,
  `list_address` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `list_name` VARCHAR(45) NOT NULL,
  `rent_amount` VARCHAR(45) NOT NULL,
  `has_rented_u_id` INT NOT NULL,
  `has_rented_list_id` INT NOT NULL,
  `listed_u_id` INT NOT NULL,
  `listed_list_id` INT NOT NULL,
  PRIMARY KEY (`list_id`),
  INDEX `fk_listings_has_rented1_idx` (`has_rented_u_id` ASC, `has_rented_list_id` ASC) VISIBLE,
  INDEX `fk_listings_listed1_idx` (`listed_u_id` ASC, `listed_list_id` ASC) VISIBLE,
  CONSTRAINT `fk_listings_has_rented1`
    FOREIGN KEY (`has_rented_u_id` , `has_rented_list_id`)
    REFERENCES `my_bnb`.`has_rented` (`u_id` , `list_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_listings_listed1`
    FOREIGN KEY (`listed_u_id` , `listed_list_id`)
    REFERENCES `my_bnb`.`listed` (`u_id` , `list_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_bnb`.`hosts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_bnb`.`hosts` (
  `u_id` INT NOT NULL,
  `listed_u_id` INT NOT NULL,
  `listed_list_id` INT NOT NULL,
  PRIMARY KEY (`u_id`),
  INDEX `fk_hosts_listed1_idx` (`listed_u_id` ASC, `listed_list_id` ASC) VISIBLE,
  CONSTRAINT `fk_hosts_listed1`
    FOREIGN KEY (`listed_u_id` , `listed_list_id`)
    REFERENCES `my_bnb`.`listed` (`u_id` , `list_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_bnb`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_bnb`.`comments` (
  `renter_comment` INT NULL,
  `host_comment` VARCHAR(45) NULL,
  `listings_list_id` INT NOT NULL,
  `hosts_u_id` INT NOT NULL,
  `renter_u_id` INT NOT NULL,
  INDEX `fk_comments_listings1_idx` (`listings_list_id` ASC) VISIBLE,
  INDEX `fk_comments_hosts1_idx` (`hosts_u_id` ASC) VISIBLE,
  INDEX `fk_comments_renter1_idx` (`renter_u_id` ASC) VISIBLE,
  PRIMARY KEY (`hosts_u_id`, `renter_u_id`, `listings_list_id`),
  CONSTRAINT `fk_comments_listings1`
    FOREIGN KEY (`listings_list_id`)
    REFERENCES `my_bnb`.`listings` (`list_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comments_hosts1`
    FOREIGN KEY (`hosts_u_id`)
    REFERENCES `my_bnb`.`hosts` (`u_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comments_renter1`
    FOREIGN KEY (`renter_u_id`)
    REFERENCES `my_bnb`.`renter` (`u_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `my_bnb`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `my_bnb`.`users` (
  `u_id` INT NOT NULL,
  `password` VARCHAR(16) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `occupation` VARCHAR(45) NOT NULL,
  `sin_num` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `dob` DATETIME NOT NULL,
  `renter_u_id` INT NOT NULL,
  `comments_hosts_u_id` INT NOT NULL,
  `comments_renter_u_id` INT NOT NULL,
  `comments_listings_list_id` INT NOT NULL,
  PRIMARY KEY (`u_id`),
  INDEX `fk_users_renter1_idx` (`renter_u_id` ASC) VISIBLE,
  INDEX `fk_users_comments1_idx` (`comments_hosts_u_id` ASC, `comments_renter_u_id` ASC, `comments_listings_list_id` ASC) VISIBLE,
  CONSTRAINT `fk_users_renter1`
    FOREIGN KEY (`renter_u_id`)
    REFERENCES `my_bnb`.`renter` (`u_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_comments1`
    FOREIGN KEY (`comments_hosts_u_id` , `comments_renter_u_id` , `comments_listings_list_id`)
    REFERENCES `my_bnb`.`comments` (`hosts_u_id` , `renter_u_id` , `listings_list_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
